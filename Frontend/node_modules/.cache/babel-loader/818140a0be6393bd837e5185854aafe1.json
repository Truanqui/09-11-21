{"ast":null,"code":"var _jsxFileName = \"J:\\\\Programa\\xE7\\xE3o\\\\Java\\\\Zonne-e-Testes\\\\09-11-21\\\\Frontend\\\\src\\\\pages\\\\show.jsx\",\n    _s = $RefreshSig$();\n\nimport { Component } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../api\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Show() {\n  _s();\n\n  const [contatos, setContato] = useState();\n  const [id, setId] = useState(0);\n  const [name, setNome] = useState(\"\");\n  const [telefone, setTelefone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const contatosToShow = {\n    idContatos: contatos,\n    contatosName: name,\n    contatosTelefone: telefone,\n    contatosEmail: email\n  };\n  const pesquisar = {\n    id: id\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await pesquisa(pesquisar);\n  }\n\n  async function pesquisa(idPesquisa) {\n    console.log(idPesquisa);\n    const response = await api.get(\"/contatos/find/\" + id);\n\n    if (response.status == 200) {\n      this.setContato({\n        contatos: response.data\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"botao-voltar\",\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [\"Informe o ID do contato que deseja mostrar:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"id\",\n        onChange: value => setId(value.target.value),\n        value: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [console.log(contatos), contatos === null || contatos === void 0 ? void 0 : contatos.map(contato => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"ID: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), contato.idContatos]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), contato.contatosName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), contato.contatosEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Telefone: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), contato.contatosTelefone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, contato.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Show, \"29z7/noH4tub7D8+/Wn2Nh0mgJA=\");\n\n_c = Show;\nexport default Show;\n\nvar _c;\n\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"sources":["J:/Programação/Java/Zonne-e-Testes/09-11-21/Frontend/src/pages/show.jsx"],"names":["Component","React","useState","useEffect","api","Link","Show","contatos","setContato","id","setId","name","setNome","telefone","setTelefone","email","setEmail","contatosToShow","idContatos","contatosName","contatosTelefone","contatosEmail","pesquisar","handleSubmit","e","preventDefault","pesquisa","idPesquisa","console","log","response","get","status","data","value","target","map","contato"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport api from \"../api\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Show() {\r\n  const [contatos, setContato] = useState();\r\n  const [id, setId] = useState(0);\r\n  const [name, setNome] = useState(\"\")\r\n  const [telefone, setTelefone] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n\r\n  const contatosToShow = {\r\n    idContatos: contatos,\r\n    contatosName: name,\r\n    contatosTelefone: telefone,\r\n    contatosEmail: email,\r\n  }\r\n\r\n  const pesquisar = {\r\n    id: id,\r\n  };\r\n  \r\n\r\n  \r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    await pesquisa(pesquisar);\r\n  }\r\n  async function pesquisa(idPesquisa) {\r\n    console.log(idPesquisa);\r\n    const response = await api.get(\"/contatos/find/\" + id);\r\n    if (response.status == 200) {\r\n      this.setContato({ contatos: response.data });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Link to=\"/\">\r\n        <button type=\"button\" className=\"botao-voltar\">\r\n          Voltar\r\n        </button>\r\n      </Link>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        Informe o ID do contato que deseja mostrar:\r\n        <input\r\n          type=\"number\"\r\n          name=\"id\"\r\n          onChange={(value) => setId(value.target.value)}\r\n          value={id}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <p>\r\n        {console.log(contatos)}\r\n        {contatos?.map((contato) => (\r\n          <span key={contato.id}>\r\n            <p>\r\n              <span>ID: </span>\r\n              {contato.idContatos}\r\n            </p>\r\n            <p>\r\n              <span>Name: </span>\r\n              {contato.contatosName}\r\n            </p>\r\n            <p>\r\n              <span>Email: </span>\r\n              {contato.contatosEmail}\r\n            </p>\r\n            <p>\r\n              <span>Telefone: </span>\r\n              {contato.contatosTelefone}\r\n            </p>\r\n          </span>\r\n        ))}\r\n      </p>\r\n    </>\r\n  );\r\n}\r\nexport default Show;\r\n"]},"metadata":{},"sourceType":"module"}